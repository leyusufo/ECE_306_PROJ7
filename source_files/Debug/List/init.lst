###############################################################################
#
# IAR C/C++ Compiler V7.20.1.997/W32 for MSP430           23/Apr/2021  20:27:56
# Copyright 1996-2020 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for MSP430, 8K KickStart Edition 7.20
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        C:\Users\loyda\OneDrive\Documents\CLASS FOLDERS\ECE 306\ECE 306
#        CODE\Project_07\init.c
#    Command line  =  
#        -f C:\Users\loyda\AppData\Local\Temp\EW16B4.tmp
#        ("C:\Users\loyda\OneDrive\Documents\CLASS FOLDERS\ECE 306\ECE 306
#        CODE\Project_07\init.c" -lC "C:\Users\loyda\OneDrive\Documents\CLASS
#        FOLDERS\ECE 306\ECE 306 CODE\Project_07\Debug\List" -o
#        "C:\Users\loyda\OneDrive\Documents\CLASS FOLDERS\ECE 306\ECE 306
#        CODE\Project_07\Debug\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --debug -D__MSP430FR2355__ -e --double=32
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\430\lib\dlib\dl430xlsfn.h" -I ./ --core=430X --data_model=small
#        -On --multiplier=32 --hw_workaround=CPU40 --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        C:\Users\loyda\OneDrive\Documents\CLASS FOLDERS\ECE 306\ECE 306
#        CODE\Project_07\Debug\List\init.lst
#    Object file   =  
#        C:\Users\loyda\OneDrive\Documents\CLASS FOLDERS\ECE 306\ECE 306
#        CODE\Project_07\Debug\Obj\init.r43
#
###############################################################################

C:\Users\loyda\OneDrive\Documents\CLASS FOLDERS\ECE 306\ECE 306 CODE\Project_07\init.c
      1          //------------------------------------------------------------------------------
      2          //
      3          //  Description: This file contains a function that sets the initial conditions 
      4          //               for many systems
      5          //
      6          //
      7          //  Loyda Yusufova
      8          //  Febreuary 12
      9          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (7.20.1)
     10          //------------------------------------------------------------------------------
     11          #include "msp430.h"
     12          #include "macros.h"
     13          #include "functions.h"
     14          
     15          //global variable needed
     16          extern char display_line[4][11];
     17          extern char *display[4];
     18          extern volatile unsigned char update_display;
     19          extern unsigned int DAC_data;
     20          
     21          
     22          
     23          //NITIALIZING CONDITIONS FOR THE DISPLAY
     24          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
     25          void Init_Conditions(void){
   \                     Init_Conditions:
   \   000000   0A12         PUSH.W  R10
     26            int i;
     27            
     28            for(i=0;i<11;i++){
   \   000002   0A43         MOV.W   #0x0, R10
   \                     ??Init_Conditions_0:
   \   000004   3A900B00     CMP.W   #0xb, R10
   \   000008   0A34         JGE     ??Init_Conditions_1
     29              display_line[0][i] = RESET_STATE;
   \   00000A   CA43....     MOV.B   #0x0, display_line(R10)
     30              display_line[1][i] = RESET_STATE;
   \   00000E   CA43....     MOV.B   #0x0, display_line + 11(R10)
     31              display_line[2][i] = RESET_STATE;
   \   000012   CA43....     MOV.B   #0x0, display_line + 22(R10)
     32              display_line[3][i] = RESET_STATE;
   \   000016   CA43....     MOV.B   #0x0, display_line + 33(R10)
     33            }
   \   00001A   1A53         ADD.W   #0x1, R10
   \   00001C   F33F         JMP     ??Init_Conditions_0
     34            
     35            display_line[0][10] = 0;
   \                     ??Init_Conditions_1:
   \   00001E   C243....     MOV.B   #0x0, &display_line + 10
     36            display_line[1][10] = 0;
   \   000022   C243....     MOV.B   #0x0, &display_line + 21
     37            display_line[2][10] = 0;
   \   000026   C243....     MOV.B   #0x0, &display_line + 32
     38            display_line[3][10] = 0;
   \   00002A   C243....     MOV.B   #0x0, &display_line + 43
     39            
     40            display[0] = &display_line[0][0];
   \   00002E   B240........ MOV.W   #display_line, &display
     41            display[1] = &display_line[1][0];
   \   000034   B240........ MOV.W   #display_line + 11, &display + 2
     42            display[2] = &display_line[2][0];
   \   00003A   B240........ MOV.W   #display_line + 22, &display + 4
     43            display[3] = &display_line[3][0];
   \   000040   B240........ MOV.W   #display_line + 33, &display + 6
     44            update_display = 0;
   \   000046   C243....     MOV.B   #0x0, &update_display
     45            
     46            // Interrupts are disabled by default, enable them.
     47            enable_interrupts();
   \   00004A   ........     CALLA   #enable_interrupts
     48          }
   \   00004E   3A41         POP.W   R10
   \   000050   1001         RETA
     49          //------------------------------------------------------------------------------

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      6   Init_Conditions
        6   -> enable_interrupts


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      82  Init_Conditions

 
 82 bytes in segment CODE
 
 82 bytes of CODE memory

Errors: none
Warnings: none
